# traefik.yml

entryPoints:
  http:
    address: ":80"
  https:
    address: ":443"
  pgbouncer:
    address: ":6432"
  pgcat:
    address: ":6433"
  redis:
    address: ":6379"
  metrics:
    address: :8082

api:
  dashboard: true
  insecure: false

ping:
  entryPoint: http

log:
  level: INFO # Set logging level (INFO, DEBUG, ERROR)

accessLog:
  bufferingSize: 100 # Buffer logs before writing to disk

certificatesResolvers:
  letsencrypt:
    acme:
      email: carlos.roberto.devops@gmail.com
      storage: /letsencrypt/acme.json
      httpChallenge:
        entryPoint: http

providers:
  file:
    directory: /etc/traefik/dynamic/
    watch: true
  docker:
    endpoint: "unix:///var/run/docker.sock"
    exposedByDefault: false
    swarmMode: true
    network: traefik-public

# Define middlewares for authentication
http:
  middlewares:
    auth:
      basicAuth:
        users:
        - "carlosrobertodevops:$apr1$Ighbak2S$cXqqCJTAKJ9HdEIpl6leK1" # Use the hash from htpasswd -nb user password
  routers:
    hasura:
      rule: "Host(`hasura.carlosrobertodevops.com.br`)"
      entryPoints:
      - "websecure"
      tls:
        certResolver: "letsencrypt"
      service: "hasura"

    auth:
      rule: "Host(`auth.carlosrobertodevops.com.br`)"
      entryPoints:
      - "websecure"
      tls:
        certResolver: "letsencrypt"
      service: "auth"

    storage:
      rule: "Host(`storage.carlosrobertodevops.com.br`)"
      entryPoints:
      - "websecure"
      tls:
        certResolver: "letsencrypt"
      service: "storage"

metrics:
  prometheus:
    addEntryPointsLabels: true
    addRoutersLabels: true
    addServicesLabels: true
    entryPoint: metrics
