services:
  traefik:
    command:
      - --configFile=/etc/traefik/dynamic/traefik.yml
    deploy:
      mode: replicated
      replicas: 1
      labels:
        app_name: traefik
        environment: production
        traefik.enable: "true"
        traefik.http.routers.api.entrypoints: https
        traefik.http.routers.api.middlewares: auth@file
        traefik.http.routers.api.rule: Host(`traefik.carlosrobertodevops.com.br`)
        traefik.http.routers.api.service: api@internal
        traefik.http.routers.api.tls.certresolver: letsencrypt
        traefik.http.services.dummy-svc.loadbalancer.server.port: "9999"
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
      resources:
        limits:
          memory: "1073741824"
        reservations:
          memory: "536870912"
      placement:
        constraints:
          - node.role == manager
    healthcheck:
      test:
        - CMD-SHELL
        - wget -qO- http://localhost:80/ping || exit 1
      timeout: 2s
      interval: 4s
      retries: 5
    image: traefik:v2.11
    networks:
      monitoring: null
      traefik-public: null
    ports:
      - mode: ingress
        target: 80
        published: 80
        protocol: tcp
      - mode: ingress
        target: 8080
        published: 8080
        protocol: tcp
      - mode: ingress
        target: 443
        published: 443
        protocol: tcp
      - mode: ingress
        target: 8082
        published: 8082
        protocol: tcp
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: ./traefik.yml
        target: /etc/traefik/dynamic/traefik.yml
        bind:
          create_host_path: true
      - type: volume
        source: letsencrypt
        target: /letsencrypt
        volume: {}
  traefik-certs-dumper:
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.role == manager
    entrypoint:
      - sh
      - -c
      - ' apk add jq ; while ! [ -e /data/acme.json ] || ! [ `jq ".[] | .Certificates | length" /data/acme.json` != 0 ]; do sleep 1 ; done && traefik-certs-dumper file --version v2 --watch --domain-subdir=true --source /data/acme.json --dest /data/certs --post-hook "sh /certs-post-hook.sh"'
    image: ldez/traefik-certs-dumper:v2.8.3
    networks:
      default: null
    volumes:
      - type: volume
        source: letsencrypt
        target: /data
        volume: {}
      - type: bind
        source: ./certs-post-hook.sh
        target: /certs-post-hook.sh
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: traefik-proxy_default
  monitoring:
    name: portainer-stack_monitoring
    external: true
  traefik-public:
    name: traefik-public
    external: true
volumes:
  letsencrypt:
    name: traefik-stack_letsencrypt
