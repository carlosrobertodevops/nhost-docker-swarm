services:
  graphql-engine:
    image: 'hasura/graphql-engine:v2.42.0'
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: '${RAW_DATABASE_URL}'
      HASURA_GRAPHQL_DATABASE_URL: '${RAW_DATABASE_URL}'
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: 'startup, http-log, webhook-log, websocket-log, query-log'
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
    expose:
      - 8080
    networks:
      - traefik-public
      - postgres-stack_postgres_network
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.hasura.rule=Host(`${HASURA_DOMAIN}`)
        - traefik.http.routers.hasura.entrypoints=https
        - traefik.http.routers.hasura.tls.certresolver=letsencrypt
        - traefik.http.services.hasura.loadbalancer.server.port=8080

  auth:
    image: 'nhost/hasura-auth:0.33.0'
    environment:
      AUTH_ACCESS_CONTROL_ALLOWED_EMAIL_DOMAINS: ''
      AUTH_ACCESS_CONTROL_ALLOWED_EMAILS: ''
      AUTH_ACCESS_CONTROL_ALLOWED_REDIRECT_URLS: ''
      AUTH_ACCESS_CONTROL_BLOCKED_EMAIL_DOMAINS: ''
      AUTH_ACCESS_CONTROL_BLOCKED_EMAILS: ''
      AUTH_ACCESS_TOKEN_EXPIRES_IN: '900'
      AUTH_ANONYMOUS_USERS_ENABLED: 'false'
      AUTH_API_PREFIX: /v1
      AUTH_CLIENT_URL: 'https://your-client-domain.com'
      AUTH_CONCEAL_ERRORS: 'false'
      AUTH_DISABLE_NEW_USERS: 'false'
      AUTH_DISABLE_SIGNUP: 'false'
      AUTH_EMAIL_PASSWORDLESS_ENABLED: 'false'
      AUTH_EMAIL_SIGNIN_EMAIL_VERIFIED_REQUIRED: 'false'
      AUTH_GRAVATAR_DEFAULT: blank
      AUTH_GRAVATAR_ENABLED: 'true'
      AUTH_GRAVATAR_RATING: g
      AUTH_HOST: 0.0.0.0
      AUTH_JWT_CUSTOM_CLAIMS: '{}'
      AUTH_LOCALE_ALLOWED_LOCALES: en
      AUTH_LOCALE_DEFAULT: en
      AUTH_MFA_ENABLED: 'false'
      AUTH_MFA_TOTP_ISSUER: ''
      AUTH_PASSWORD_HIBP_ENABLED: 'false'
      AUTH_PASSWORD_MIN_LENGTH: '9'
      AUTH_PORT: '4000'
      AUTH_RATE_LIMIT_ENABLE: 'true'
      AUTH_REFRESH_TOKEN_EXPIRES_IN: '2592000'
      AUTH_SERVER_URL: 'https://${AUTH_DOMAIN}/v1'
      AUTH_SMTP_AUTH_METHOD: PLAIN
      AUTH_SMTP_HOST: smtp.your-smtp-host.com
      AUTH_SMTP_PASS: your-smtp-password
      AUTH_SMTP_PORT: '587'
      AUTH_SMTP_SECURE: 'true'
      AUTH_SMTP_SENDER: noreply@your-domain.com
      AUTH_SMTP_USER: your-smtp-user
      AUTH_USER_DEFAULT_ALLOWED_ROLES: 'user,me'
      AUTH_USER_DEFAULT_ROLE: user
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
      HASURA_GRAPHQL_DATABASE_URL: '${PGBOUNCER_DATABASE_URL}'
      HASURA_GRAPHQL_GRAPHQL_URL: 'https://${HASURA_DOMAIN}/v1/graphql'
      HASURA_GRAPHQL_JWT_SECRET: '${HASURA_GRAPHQL_JWT_SECRET}'
      POSTGRES_MIGRATIONS_CONNECTION: '${PGBOUNCER_DATABASE_URL}'
    volumes:
      -
        type: bind
        source: ./emails
        target: /app/email-templates
        read_only: false
    healthcheck:
      test:
        - CMD
        - wget
        - '--spider'
        - '-S'
        - 'http://localhost:4000/healthz'
      timeout: 60s
      interval: 5s
      start_period: 60s
    expose:
      - 4000
    networks:
      - traefik-public
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.auth.rule=Host(`${AUTH_DOMAIN}`)
        - traefik.http.routers.auth.entrypoints=https
        - traefik.http.routers.auth.tls.certresolver=letsencrypt
        - traefik.http.services.auth.loadbalancer.server.port=4000
  
  storage:
    image: nhost/hasura-storage:0.6.1
    environment:
      BIND: :5000
      PORT: 5000
      HASURA_ENDPOINT: 'https://${HASURA_DOMAIN}/v1'
      HASURA_GRAPHQL_ADMIN_SECRET: '${HASURA_GRAPHQL_ADMIN_SECRET}'
      HASURA_METADATA: "1"
      POSTGRES_MIGRATIONS: "1"
      POSTGRES_MIGRATIONS_SOURCE: '${PGBOUNCER_DATABASE_URL}?sslmode=disable'
      PUBLIC_URL: https://${STORAGE_DOMAIN}
      S3_ACCESS_KEY: '${S3_ACCESS_KEY}'
      S3_BUCKET: '${S3_BUCKET}'
      S3_ENDPOINT: '${S3_ENDPOINT}'
      S3_REGION: '${S3_REGION}'
      S3_ROOT_FOLDER: ""
      S3_SECRET_KEY: '${S3_SECRET_KEY}'
    expose:
      - 5000
    networks:
      - traefik-public
    command:
      - serve
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.http.routers.storage.rule=Host(`${STORAGE_DOMAIN}`)
        - traefik.http.routers.storage.entrypoints=https
        - traefik.http.routers.storage.tls.certresolver=letsencrypt
        - traefik.http.services.storage.loadbalancer.server.port=5000

networks:
  traefik-public:
    external: true
  postgres-stack_postgres_network:
    external: true
  